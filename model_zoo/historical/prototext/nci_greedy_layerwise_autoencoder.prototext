model {
  name: "greedy_layerwise_autoencoder"
  objective_function: "mean_squared_error"
#  data_layout: "data_parallel"
  mini_batch_size: 192
  num_epochs: 10
  num_parallel_readers: 0
  procs_per_model: 0
  use_cudnn: false
  block_size: 256
  evaluation_frequency: -1


  ###################################################
  # Optimzer
  ###################################################
  optimizer {
    name: "adagrad"
    learn_rate: 0.01
    momentum: 0.9
    decay: 0.5
    nesterov: true
  }

  ###################################################
  # Callbacks
  ###################################################
  callback {
    print {
      interval: 1
    }
  }
  callback {
    timer {
      dir: "none"
    }
  }
  callback {
    summary {
      dir: "none"
      interval: 1
    }
  }

  ###################################################
  # start of layers
  ###################################################

  #######
  # INPUT
  #######
  layer {
    index: 1
    parent: 1
    data_layout: "model_parallel"
    input_distributed_minibatch_parallel_io {
    }
  }

  #################
  # FULLY_CONNECTED
  #################
  layer {
    index: 2
    parent: 1
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 500
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  ######
  # RELU
  ######
  layer {
    index: 3
    parent: 2
    data_layout: "model_parallel"
    relu {
      num_neurons: 500
    }
  }

  #########
  # DROPOUT
  #########
  layer {
    index: 4
    parent: 3
    data_layout: "model_parallel"
    dropout {
      num_neurons: 500
      keep_prob: -1.0
    }
  }
}
