model {
  name: "dnn"
  objective_function: "mean_squared_error"
  metric: "categorical_accuracy"
  data_layout: "model_parallel"
  mini_batch_size: 128
  block_size: 256
  num_epochs: 10
  num_parallel_readers: 1
  procs_per_model: 0
  use_cudnn: true
  num_gpus: -1

  ###################################################
  # Callbacks
  ###################################################
  callback {
    print {
      interval: 1
    }
  }
  callback {
    timer {
      dir: "none"
    }
  }
#  callback {
#    summary {
#      dir: "none"
#      interval: 1
#    }
#  }
#  callback {
#    save_images {
#      image_dir: "."
#      extension: "jpg"
#    }
#  }

  ###################################################
  # start of layers
  ###################################################

  #######
  # INPUT
  #######
  layer {
    index: 1
    parent: 1
    data_layout: "model_parallel"
    input_distributed_minibatch {
    }
  }

  #################
  # FULLY_CONNECTED encode1
  #################
  layer {
    index: 2
    parent: 1
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 1000
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  ######
  # RELU relu1
  ######
  layer {
    index: 3
    parent: 2
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED decode1
  #################
  layer {
    index: 4
    parent: 3 
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 3072
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # SIGMOID sigmoid
  #######
  layer {
    index: 5
    parent: 4
    data_layout: "model_parallel"
    sigmoid {
    }
  }

  
  #################
  # RECONSTRUCTION
  #################
  layer {
    index: 6
    parent: 5
    data_layout: "model_parallel"
    reconstruction {
      original_layer: 1
    }
  }

  ###################################################
  # end of layers
  ###################################################
}
