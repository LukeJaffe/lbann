model {
  name: "directed_acyclic_graph_model"
  objective_function {
    l2_weight_regularization {
      scale_factor: 0.0001
    }
    layer_term {
      scale_factor: 0.05
      layer: "g_adv1_eval"
    }
    layer_term {
      scale_factor: 0.025
      layer: "l_l2_y"
    }
  }
  num_epochs: 1
  data_layout: "model_parallel"
  layer {
    input {
      io_buffer: "partitioned"
      target_mode: "N/A"
    }
    name: "data"
    data_layout: "data_parallel"
    parents: " "
  }
  layer {
    name: "slice_data"
    data_layout: "model_parallel"
    parents: "data"
    children: "image_data_id param_data_id"
    slice {
      slice_points: "0 16384 16389"
    }
  }
  layer {
    identity {
    }
    name: "image_data_id"
    data_layout: "model_parallel"
    parents: "slice_data"
  }
  layer {
    identity {
    }
    name: "param_data_id"
    data_layout: "model_parallel"
    parents: "slice_data"
  }
########Data space end here
  ######################
  # Encoder from VAE
  ######################

  # encode1
  layer {
    #parents: "data"
    parents: "image_data_id"
    name: "encode1"
    freeze: true
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 256
      weight_initialization: "he_normal"
      has_bias: true
    }
  }
  layer {
    parents: "encode1"
    name: "encode1_elu"
    data_layout: "model_parallel"
    elu {}
  }
  layer {
    parents: "encode1_elu"
    name: "encode1_dropout"
    data_layout: "model_parallel"
    dropout {
      keep_prob: 0.95
    }
  }

  # encode2
  layer {
    parents: "encode1_dropout"
    name: "encode2"
    freeze: true
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 256
      weight_initialization: "he_normal"
      has_bias: true
    }
  }
  layer {
    parents: "encode2"
    name: "encode2_tanh"
    data_layout: "model_parallel"
    tanh {}
  }
  layer {
    parents: "encode2_tanh"
    name: "encode2_dropout"
    data_layout: "model_parallel"
    dropout {
      keep_prob: 0.95
    }
  }

  # encode3
  layer {
    parents: "encode2_dropout"
    name: "encode3"
    freeze: true
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 256
      weight_initialization: "he_normal"
      has_bias: true
    }
  }
  layer {
    parents: "encode3"
    name: "encode3_tanh"
    data_layout: "model_parallel"
    tanh {}
  }
  layer {
    parents: "encode3_tanh"
    name: "encode3_dropout"
    data_layout: "model_parallel"
    dropout {
      keep_prob: 0.95
    }
  }

  ######################
  # Latent space
  ######################

  layer {
    parents: "encode3_dropout"
    name: "z_mean"
    freeze: true
    data_layout: "model_parallel"
    fully_connected {
      num_neurons:20
      weight_initialization: "glorot_normal"
      has_bias: true
    }
  }
  layer {
    parents: "encode3_dropout"
    name: "z_log_sigma"
    freeze: true
    data_layout: "model_parallel"
    fully_connected {
      num_neurons:20
      weight_initialization: "glorot_normal"
      has_bias: true
    }
  }

  ######################
  # KL divergence
  ######################

  layer {
    name: "kl_one"
    data_layout: "model_parallel"
    constant {
      value: 1.0
      num_neurons: "20"
    }
  }
  layer {
    parents: "z_mean"
    name: "kl_z_mean2"
    data_layout: "model_parallel"
    square {}
  }
  layer {
    parents: "z_log_sigma"
    name: "kl_exp"
    data_layout: "model_parallel"
    exp {}
  }
  layer {
    parents: "kl_one z_log_sigma kl_z_mean2 kl_exp"
    name: "kl_full"
    data_layout: "model_parallel"
    weighted_sum {
      scaling_factors: "-0.5 -0.5 0.5 0.5"
    }
  }
  layer {
    parents: "kl_full"
    name: "kl_sum"
    data_layout: "data_parallel"
    reduction {
      mode: "sum"
    }
  }
  layer {
    parents: "kl_sum"
    name: "kl_divergence"
    data_layout: "data_parallel"
    evaluation {}
  }

  ######################
  # Sample from latent space
  ######################

  layer {
    parents: "z_log_sigma"
    name: "sample_half"
    data_layout: "model_parallel"
    weighted_sum {
      scaling_factors: "0.5"
    }
  }
  layer {
    parents: "sample_half"
    name: "sample_exp"
    data_layout: "model_parallel"
    exp {}
  }
  layer {
    name: "sample_noise"
    data_layout: "model_parallel"
    gaussian {
      mean: 0.0
      stdev: 1.0
      neuron_dims: "20"
    }
  }
  layer {
    parents: "sample_exp sample_noise"
    name: "sample_exp_noise"
    data_layout: "model_parallel"
    hadamard {}
  }
  layer {
    parents: "z_mean sample_exp_noise"
    #name: "sample"
    ###This is actually sample, call image_data_dummy for legacy
    name: "image_data_dummy"
    data_layout: "model_parallel"
    sum {}
  }
  #####VAE Encoder ends here, sample feeds/replaces image data dummy

  layer {
    fully_connected {
      num_neurons: 256
      has_bias: true
    }
    name: "gen1fc1_1"
    data_layout: "model_parallel"
    weights: "gen1fc1linearity"
    parents: "param_data_id"
  }
  layer {
    relu {
    }
    name: "gen1relu1_1"
    data_layout: "model_parallel"
    parents: "gen1fc1_1"
  }
  layer {
    fully_connected {
      num_neurons: 2048
      has_bias: true
    }
    name: "gen1fc2_1"
    data_layout: "model_parallel"
    weights: "gen1fc2linearity"
    parents: "gen1relu1_1"
  }
  layer {
    relu {
    }
    name: "gen1relu2_1"
    data_layout: "model_parallel"
    parents: "gen1fc2_1"
  }
  layer {
    dropout {
      keep_prob: 0.8
    }
    name: "gen1dropout1_1"
    data_layout: "model_parallel"
    parents: "gen1relu2_1"
  }
  layer {
    fully_connected {
      num_neurons: 8192
      has_bias: true
    }
    name: "gen1fc3_1"
    data_layout: "model_parallel"
    weights: "gen1fc3linearity"
    parents: "gen1dropout1_1"
  }
  layer {
    relu {
    }
    name: "gen1relu3_1"
    data_layout: "model_parallel"
    parents: "gen1fc3_1"
  }
  layer {
    fully_connected {
      #num_neurons: 16384
      #replace image_dim with latent_dim
      num_neurons: 20
      has_bias: true
    }
    name: "gen1fc4_1"
    data_layout: "model_parallel"
    weights: "gen1fc4linearity"
    parents: "gen1relu3_1"
  }
  layer {
    name: "concat_gsample_n_param"
    data_layout: "model_parallel"
    parents: "gen1fc4_1 param_data_id"
    concatenation {
    }
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 2048
      has_bias: true
    }
    name: "disc1fc1_real"
    data_layout: "model_parallel"
    weights: "disc1fc1linearity"
    parents: "concat_gsample_n_param"
  }
  layer {
    relu {
    }
    name: "disc1relu1_real"
    data_layout: "model_parallel"
    parents: "disc1fc1_real"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 256
      has_bias: true
    }
    name: "disc1fc2_real"
    data_layout: "model_parallel"
    weights: "disc1fc2linearity"
    parents: "disc1relu1_real"
  }
  layer {
    relu {
    }
    name: "disc1relu2_real"
    data_layout: "model_parallel"
    parents: "disc1fc2_real"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 1
      has_bias: true
    }
    name: "disc1fc3_real"
    data_layout: "model_parallel"
    weights: "disc1fc3linearity"
    parents: "disc1relu2_real"
  }
  layer {
    name: "g_adv1_bce"
    data_layout: "model_parallel"
    device_allocation: "cpu"
    parents: "disc1fc3_real"
    bce_with_logits {
      true_label: 1
    }
  }
  layer {
    name: "g_adv1_eval"
    data_layout: "model_parallel"
    parents: "g_adv1_bce"
    evaluation {
    }
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 256
      has_bias: true
    }
    name: "gen2fc1_y"
    data_layout: "model_parallel"
    weights: "gen2fc1linearity"
    parents: "image_data_dummy"
  }
  layer {
    relu {
    }
    name: "gen2relu1_y"
    data_layout: "model_parallel"
    parents: "gen2fc1_y"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 2048
      has_bias: true
    }
    name: "gen2fc2_y"
    data_layout: "model_parallel"
    weights: "gen2fc2linearity"
    parents: "gen2relu1_y"
  }
  layer {
    relu {
    }
    name: "gen2relu2_y"
    data_layout: "model_parallel"
    parents: "gen2fc2_y"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 8192
      has_bias: true
    }
    name: "gen2fc3_y"
    data_layout: "model_parallel"
    weights: "gen2fc3linearity"
    parents: "gen2relu2_y"
  }
  layer {
    relu {
    }
    name: "gen2relu3_y"
    data_layout: "model_parallel"
    parents: "gen2fc3_y"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 5
      has_bias: true
    }
    name: "gen2fc4_y"
    data_layout: "model_parallel"
    weights: "gen2fc4linearity"
    parents: "gen2relu3_y"
  }
  layer {
    fully_connected {
      num_neurons: 256
      has_bias: true
    }
    name: "gen1fc1_2"
    data_layout: "model_parallel"
    weights: "gen1fc1linearity"
    parents: "gen2fc4_y"
  }
  layer {
    relu {
    }
    name: "gen1relu1_2"
    data_layout: "model_parallel"
    parents: "gen1fc1_2"
  }
  layer {
    fully_connected {
      num_neurons: 2048
      has_bias: true
    }
    name: "gen1fc2_2"
    data_layout: "model_parallel"
    weights: "gen1fc2linearity"
    parents: "gen1relu1_2"
  }
  layer {
    relu {
    }
    name: "gen1relu2_2"
    data_layout: "model_parallel"
    parents: "gen1fc2_2"
  }
  layer {
    dropout {
      keep_prob: 0.8
    }
    name: "gen1dropout1_2"
    data_layout: "model_parallel"
    parents: "gen1relu2_2"
  }
  layer {
    fully_connected {
      num_neurons: 8192
      has_bias: true
    }
    name: "gen1fc3_2"
    data_layout: "model_parallel"
    weights: "gen1fc3linearity"
    parents: "gen1dropout1_2"
  }
  layer {
    relu {
    }
    name: "gen1relu3_2"
    data_layout: "model_parallel"
    parents: "gen1fc3_2"
  }
  layer {
    fully_connected {
      #num_neurons: 16384
      #replace image_dim with latent_dim
      num_neurons: 20
      has_bias: true
    }
    name: "gen1fc4_2"
    data_layout: "model_parallel"
    weights: "gen1fc4linearity"
    parents: "gen1relu3_2"
  }
  layer {
    name: "cycy_minus_y"
    data_layout: "model_parallel"
    parents: "gen1fc4_2 image_data_dummy"
    weighted_sum {
      scaling_factors: "1 -1"
    }
  }
  layer {
    abs {
    }
    name: "L_cyc_y"
    data_layout: "model_parallel"
    device_allocation: "cpu"
    parents: "cycy_minus_y"
  }
  layer {
    name: "L_cyc_y_eval"
    data_layout: "model_parallel"
    parents: "L_cyc_y"
    evaluation {
    }
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 256
      has_bias: true
    }
    name: "gen2fc1_gsample"
    data_layout: "model_parallel"
    weights: "gen2fc1linearity"
    parents: "gen1fc4_1"
  }
  layer {
    relu {
    }
    name: "gen2relu1_gsample"
    data_layout: "model_parallel"
    parents: "gen2fc1_gsample"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 2048
      has_bias: true
    }
    name: "gen2fc2_gsample"
    data_layout: "model_parallel"
    weights: "gen2fc2linearity"
    parents: "gen2relu1_gsample"
  }
  layer {
    relu {
    }
    name: "gen2relu2_gsample"
    data_layout: "model_parallel"
    parents: "gen2fc2_gsample"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 8192
      has_bias: true
    }
    name: "gen2fc3_gsample"
    data_layout: "model_parallel"
    weights: "gen2fc3linearity"
    parents: "gen2relu2_gsample"
  }
  layer {
    relu {
    }
    name: "gen2relu3_gsample"
    data_layout: "model_parallel"
    parents: "gen2fc3_gsample"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 5
      has_bias: true
    }
    name: "gen2fc4_gsample"
    data_layout: "model_parallel"
    weights: "gen2fc4linearity"
    parents: "gen2relu3_gsample"
  }
  layer {
    name: "cycx_minus_x"
    data_layout: "model_parallel"
    parents: "gen2fc4_gsample param_data_id"
    weighted_sum {
      scaling_factors: "1 -1"
    }
  }
  layer {
    abs {
    }
    name: "L_cyc_x"
    device_allocation: "cpu"
    data_layout: "model_parallel"
    parents: "cycx_minus_x"
  }
  layer {
    name: "L_cyc_x_eval"
    data_layout: "model_parallel"
    parents: "L_cyc_x"
    evaluation {
    }
  }
  layer {
    name: "gsample_minus_y"
    data_layout: "model_parallel"
    parents: "gen1fc4_1 image_data_dummy"
    weighted_sum {
      scaling_factors: "1 -1"
    }
  }
  layer {
    l2_norm2 {
    }
    name: "l_l2_y"
    device_allocation: "cpu"
    data_layout: "model_parallel"
    parents: "gsample_minus_y"
  }
  weights {
    name: "gen1fc1linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "gen1fc2linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "gen1fc3linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "gen1fc4linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "disc1fc1linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "disc1fc2linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "disc1fc3linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "gen2fc1linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "gen2fc2linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "gen2fc3linearity"
    he_normal_initializer {
    }
  }
  weights {
    name: "gen2fc4linearity"
    he_normal_initializer {
    }
  }
  mini_batch_size: 100
  callback {
    print {
      interval: 1
    }
  }
  callback { timer {} }
 #callback {
 #   dump_activations {
 #     basename: "/dir/to/dump_y_activations/"
  #    basename: "/usr/workspace/wsa/jacobs32/github.saj.lbann/jags10K_multi/cycgan_m2/"
  #    interval: 100
  #    layer_names: "image_data_dummy gen1fc4_1 l_l2_y"
  #  }
  #}
  block_size: 256
  super_steps: 10000
  num_batches: 1
}
