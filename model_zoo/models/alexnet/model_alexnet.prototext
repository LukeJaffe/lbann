model {
  name: "dnn"
  objective_function: "cross_entropy"
  metric {
    categorical_accuracy {
    }
  }
  metric {
    top_k_categorical_accuracy {
       top_k: 5
    }
  }
  data_layout: "data_parallel"
  mini_batch_size: 256
  block_size: 256
  num_epochs: 20
  num_parallel_readers: 0
  procs_per_model: 0
  use_cudnn: true
  num_gpus: -1

  ###################################################
  # Callbacks 
  ###################################################
  callback {
    imcomm {
      intermodel_comm_method: "normal"
      layers: "conv1 conv2 conv3 conv4 conv5 fc6 fc7 fc8"
    }  
  }
  callback {
    print {
      interval: 1
    }
  }
  callback {
    timer {
    }
  }
  callback {
    summary {
      dir: "."
      batch_interval: 1
      mat_interval: 25
    }
  }
  # callback {
  #   save_images {
  #     image_dir: "
  #     extension: "jpg"
  #   }
  # }
  # callback {
  #   dump_mb_indices {
  #     basename: "debug_alexnet/"
  #     interval: 1
  #   }
  # }
  # callback {
  #   disp_io_stats {
  #     layers: "1"
  #   }
  # }
  # callback {
  #   debug {
  #     phase: "train"
  #   }
  # }
  # callback {
  #   debug_io {
  #     phase: "train"
  #     lvl: 1
  #   }
  # }
  # callback {
  #   gradient_check {
  #     step_size: 0
  #     verbose: false
  #   }
  # }

  ###################################################
  # start of layers
  ###################################################

  layer {
    name: "data"
    data_layout: "data_parallel"
    input_partitioned_minibatch {
    }
  }

  layer {
    name: "conv1"
    data_layout: "data_parallel"
    convolution {
      num_dims: 2
      num_output_channels: 96
      conv_dims: "11 11"
      conv_pads: "0 0"
      conv_strides: "4 4"
      weight_initialization: "he_normal"
      has_bias: true
      has_vectors: true
      l2_regularization_factor: 0.0005
    }
  }
  layer {
    name: "relu1"
    data_layout: "data_parallel"
    relu {
    }
  }
  layer {
    name: "norm1"
    data_layout: "data_parallel"
    local_response_normalization {
      window_width: 5
      lrn_alpha: 0.0001
      lrn_beta: 0.75
      lrn_k: 2
    }
  }
  layer {
    name: "pool1"
    data_layout: "data_parallel"
    pooling {
      num_dims: 2
      pool_dims: "3 3"
      pool_pads: "0 0"
      pool_strides: "2 2"
      pool_mode: "max"
      has_vectors: true
    }
  }

  layer {
    name: "conv2"
    data_layout: "data_parallel"
    convolution {
      num_dims: 2
      num_output_channels:  256
      conv_dims: "5 5"
      conv_pads: "2 2"
      conv_strides: "1 1"
      weight_initialization: "he_normal"
      has_bias: true
      bias_initial_value: 0.1
      has_vectors: true
      l2_regularization_factor: 0.0005
    }
  }
  layer {
    name: "relu2"
    data_layout: "data_parallel"
    relu {
    }
  }
  layer {
    name: "norm2"
    data_layout: "data_parallel"
    local_response_normalization {
      window_width: 5
      lrn_alpha: 0.0001
      lrn_beta: 0.75
      lrn_k: 2
    }
  }
  layer {
    name: "pool2"
    data_layout: "data_parallel"
    pooling {
      num_dims: 2
      pool_dims: "3 3"
      pool_pads: "0 0"
      pool_strides: "2 2"
      pool_mode: "max"
      has_vectors: true
    }
  }

  layer {
    name: "conv3"
    data_layout: "data_parallel"
    convolution {
      num_dims: 2
      num_output_channels:  384
      conv_dims: "3 3"
      conv_pads: "1 1"
      conv_strides: "1 1"
      weight_initialization: "he_normal"
      has_bias: true
      has_vectors: true
      l2_regularization_factor: 0.0005
    }
  }
  layer {
    name: "relu3"
    data_layout: "data_parallel"
    relu {
    }
  }

  layer {
    name: "conv4"
    data_layout: "data_parallel"
    convolution {
      num_dims: 2
      num_output_channels:  384
      conv_dims: "3 3"
      conv_pads: "1 1"
      conv_strides: "1 1"
      weight_initialization: "he_normal"
      has_bias: true
      bias_initial_value: 0.1
      has_vectors: true
      l2_regularization_factor: 0.0005
    }
  }
  layer {
    name: "relu4"
    data_layout: "data_parallel"
    relu {
    }
  }

  layer {
    name: "conv5"
    data_layout: "data_parallel"
    convolution {
      num_dims: 2
      num_output_channels:  256
      conv_dims: "3 3"
      conv_pads: "1 1"
      conv_strides: "1 1"
      weight_initialization: "he_normal"
      has_bias: true
      bias_initial_value: 0.1
      has_vectors: true
      l2_regularization_factor: 0.0005
    }
  }
  layer {
    name: "relu5"
    data_layout: "data_parallel"
    relu {
    }
  }
  layer {
    name: "pool5"
    data_layout: "data_parallel"
    pooling {
      num_dims: 2
      pool_dims: "3 3"
      pool_pads: "0 0"
      pool_strides: "2 2"
      pool_mode: "max"
      has_vectors: true
    }
  }

  layer {
    name: "fc6"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 4096
      weight_initialization: "he_normal"
      has_bias: true
      bias_initial_value: 0.1
      l2_regularization_factor: 0.0005
    }
  }
  layer {
    name: "relu6"
    data_layout: "model_parallel"
    relu {
    }
  }
  layer {
    name: "drop6"
    data_layout: "model_parallel"
    dropout {
      keep_prob: 0.5
    }
  }

  layer {
    name: "fc7"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 4096
      weight_initialization: "he_normal"
      has_bias: true
      bias_initial_value: 0.1
      l2_regularization_factor: 0.0005
    }
  }
  layer {
    name: "relu7"
    data_layout: "model_parallel"
    relu {
    }
  }
  layer {
    name: "drop7"
    data_layout: "model_parallel"
    dropout {
      keep_prob: 0.5
    }
  }

  layer {
    name: "fc8"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 1000
      weight_initialization: "he_normal"
      has_bias: false
      l2_regularization_factor: 0.0005
    }
  }

  layer {
    name: "prob"
    data_layout: "model_parallel"
    softmax {
    }
  }

  layer {
    name: "target"
    data_layout: "data_parallel"
    target_partitioned_minibatch {
      shared_data_reader: true
    }
  }

}
