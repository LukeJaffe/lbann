# cmd line for original experiment:
#  $ /usr/workspace/wsb/hysom/TEST10/lbann/model_zoo/models/alexnet/../../../build/catalyst.llnl.gov/model_zoo/lbann --model=model_alexnet.prototext --reader=../../data_readers/data_reader_imagenet.prototext --optimizer=../../optimizers/opt_adagrad.prototext 
#
# Experiment conducted at: Tue Aug 29 08:34:08 2017
#
#
# Experiment was run with lbann version: v0.93-rc0-906-gd84a104-dirty
#
#
# To rerun the experiment: 
#  $ srun -n12 /usr/workspace/wsb/hysom/TEST10/lbann/model_zoo/models/alexnet/../../../build/catalyst.llnl.gov/model_zoo/lbann --loadme=data.prototext
#
#
# Selected SLURM Environment Variables:
# HOST=catalyst321
# SLURM_NODELIST=catalyst321
# SLURM_NNODES=1
# SLURM_NTASKS=12
# SLURM_TASKS_PER_NODE=12

#
#
data_reader {
  reader {
    name: "imagenet"
    role: "train"
    shuffle: true
    data_filedir: "/p/lscratchf/brainusr/datasets/ILSVRC2012/resized_256x256/train/"
    data_filename: "/p/lscratchf/brainusr/datasets/ILSVRC2012/labels/train_c0-9.txt"
    train_or_test_percent: 1
    validation_percent: 0.1
    image_preprocessor {
      scale: true
      subtract_mean: true
      unit_variance: true
    }
  }
  reader {
    name: "imagenet"
    role: "test"
    shuffle: true
    data_filedir: "/p/lscratchf/brainusr/datasets/ILSVRC2012/resized_256x256/val/"
    data_filename: "/p/lscratchf/brainusr/datasets/ILSVRC2012/labels/val_c0-9.txt"
    train_or_test_percent: 1
    validation_percent: 1
    image_preprocessor {
      scale: true
      subtract_mean: true
      unit_variance: true
    }
  }
}
model {
  name: "dnn"
  objective_function: "cross_entropy"
  num_epochs: 20
  metric {
    categorical_accuracy {
    }
  }
  metric {
    top_k_categorical_accuracy {
      top_k: 5
    }
  }
  data_layout: "data_parallel"
  use_cudnn: true
  layer {
    input_partitioned_minibatch {
    }
    index: 1
    parent: 1
    data_layout: "data_parallel"
  }
  layer {
    convolution {
      num_dims: 2
      has_vectors: true
      num_output_channels: 96
      conv_dims: "11 11"
      conv_pads: "0 0"
      conv_strides: "4 4"
      weight_initialization: "he_normal"
      has_bias: true
      l2_regularization_factor: 0.0005
    }
    index: 2
    parent: 1
    data_layout: "data_parallel"
  }
  layer {
    relu {
    }
    index: 3
    parent: 2
    data_layout: "data_parallel"
  }
  layer {
    local_response_normalization {
      window_width: 5
      lrn_alpha: 0.0001
      lrn_beta: 0.75
      lrn_k: 2
    }
    index: 4
    parent: 3
    data_layout: "data_parallel"
  }
  layer {
    pooling {
      num_dims: 2
      has_vectors: true
      pool_dims: "3 3"
      pool_pads: "0 0"
      pool_strides: "2 2"
      pool_mode: "max"
    }
    index: 5
    parent: 4
    data_layout: "data_parallel"
  }
  layer {
    convolution {
      num_dims: 2
      has_vectors: true
      num_output_channels: 256
      conv_dims: "5 5"
      conv_pads: "2 2"
      conv_strides: "1 1"
      weight_initialization: "he_normal"
      has_bias: true
      l2_regularization_factor: 0.0005
    }
    index: 6
    parent: 5
    data_layout: "data_parallel"
  }
  layer {
    relu {
    }
    index: 7
    parent: 6
    data_layout: "data_parallel"
  }
  layer {
    local_response_normalization {
      window_width: 5
      lrn_alpha: 0.0001
      lrn_beta: 0.75
      lrn_k: 2
    }
    index: 8
    parent: 7
    data_layout: "data_parallel"
  }
  layer {
    pooling {
      num_dims: 2
      has_vectors: true
      pool_dims: "3 3"
      pool_pads: "0 0"
      pool_strides: "2 2"
      pool_mode: "max"
    }
    index: 9
    parent: 8
    data_layout: "data_parallel"
  }
  layer {
    convolution {
      num_dims: 2
      has_vectors: true
      num_output_channels: 384
      conv_dims: "3 3"
      conv_pads: "1 1"
      conv_strides: "1 1"
      weight_initialization: "he_normal"
      has_bias: true
      l2_regularization_factor: 0.0005
    }
    index: 10
    parent: 9
    data_layout: "data_parallel"
  }
  layer {
    relu {
    }
    index: 11
    parent: 10
    data_layout: "data_parallel"
  }
  layer {
    convolution {
      num_dims: 2
      has_vectors: true
      num_output_channels: 384
      conv_dims: "3 3"
      conv_pads: "1 1"
      conv_strides: "1 1"
      weight_initialization: "he_normal"
      has_bias: true
      l2_regularization_factor: 0.0005
    }
    index: 12
    parent: 11
    data_layout: "data_parallel"
  }
  layer {
    relu {
    }
    index: 13
    parent: 12
    data_layout: "data_parallel"
  }
  layer {
    convolution {
      num_dims: 2
      has_vectors: true
      num_output_channels: 256
      conv_dims: "3 3"
      conv_pads: "1 1"
      conv_strides: "1 1"
      weight_initialization: "he_normal"
      has_bias: true
      l2_regularization_factor: 0.0005
    }
    index: 14
    parent: 13
    data_layout: "data_parallel"
  }
  layer {
    relu {
    }
    index: 15
    parent: 14
    data_layout: "data_parallel"
  }
  layer {
    pooling {
      num_dims: 2
      has_vectors: true
      pool_dims: "3 3"
      pool_pads: "0 0"
      pool_strides: "2 2"
      pool_mode: "max"
    }
    index: 16
    parent: 15
    data_layout: "data_parallel"
  }
  layer {
    fully_connected {
      num_neurons: 4096
      weight_initialization: "he_normal"
      has_bias: true
      l2_regularization_factor: 0.0005
    }
    index: 17
    parent: 16
    data_layout: "model_parallel"
  }
  layer {
    relu {
    }
    index: 18
    parent: 17
    data_layout: "model_parallel"
  }
  layer {
    dropout {
      keep_prob: 0.5
    }
    index: 19
    parent: 18
    data_layout: "model_parallel"
  }
  layer {
    fully_connected {
      num_neurons: 4096
      weight_initialization: "he_normal"
      has_bias: true
      l2_regularization_factor: 0.0005
    }
    index: 20
    parent: 19
    data_layout: "model_parallel"
  }
  layer {
    relu {
    }
    index: 21
    parent: 20
    data_layout: "model_parallel"
  }
  layer {
    dropout {
      keep_prob: 0.5
    }
    index: 22
    parent: 21
    data_layout: "model_parallel"
  }
  layer {
    fully_connected {
      num_neurons: 1000
      weight_initialization: "he_normal"
      l2_regularization_factor: 0.0005
    }
    index: 23
    parent: 22
    data_layout: "model_parallel"
  }
  layer {
    index: 24
    parent: 23
    data_layout: "model_parallel"
    softmax {
    }
  }
  layer {
    index: 25
    parent: 24
    data_layout: "data_parallel"
    target_partitioned_minibatch {
      shared_data_reader: true
    }
  }
  mini_batch_size: 256
  callback {
    imcomm {
      intermodel_comm_method: "normal"
      layers: "2 6 10 12 14 17 20 23"
      summary_dir: "."
    }
  }
  callback {
    print {
      interval: 1
    }
  }
  callback {
    timer {
      dir: "none"
    }
  }
  callback {
    summary {
      dir: "."
      interval: 1
    }
  }
  block_size: 256
  num_gpus: -1
  num_parallel_readers: 12
}
optimizer {
  adagrad {
    learn_rate: 0.01
    eps: 1e-08
  }
}
