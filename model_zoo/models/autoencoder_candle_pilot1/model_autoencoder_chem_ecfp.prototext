model {
  ### Model description and network architecture taken from:
  ### https://lc.llnl.gov/bitbucket/projects/BIOM/repos/molresp/browse/tf_model.py?at=TensorFlow_chemClass
  ### This network description is anologous to AutoEncoder_Chem_ECFP 
  name: "dnn"
  objective_function: "mean_squared_error"
  data_layout: "model_parallel"
  mini_batch_size: 128
  block_size: 256
  num_epochs: 4
  num_parallel_readers: 1
  procs_per_model: 0
  use_cudnn: true
  num_gpus: -1

  ###################################################
  # Callbacks
  ###################################################
  callback {
    print {
      interval: 1
    }
  }
  callback {
    timer {
    }
  }
 # callback {
 #   summary {
 #     dir: "."
 #     batch_interval: 1
 #     mat_interval: 25
 #   }
 # }
#  callback {
#    debug {
#      phase: "train"
#    }
#  }

  ###################################################
  # start of layers
  ###################################################

  #######
  # INPUT
  #######
  layer {
    name: "1"
    parents: "1"
    children: ""
    data_layout: "model_parallel"
    input_distributed_minibatch {
    }
  }

  #################
  # FULLY_CONNECTED encode1
  #################
  layer {
    name: "2"
    parents: "1"
    children: ""
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 2000
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  ######
  # RELU relu1
  ######
  layer {
    name: "3"
    parents: "2"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED encode2
  #################
  layer {
    name: "4"
    parents: "3"
    children: ""
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 1000
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # RELU relu2
  #######
  layer {
    name: "5"
    parents: "4"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED encode3
  #################
  layer {
    name: "6"
    parents: "5"
    children: ""
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 500 
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # RELU relu3
  #######
  layer {
    name: "7"
    parents: "6"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED encode4
  #################
  layer {
    name: "8"
    parents: "7"
    children: ""
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 250
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # RELU relu4
  #######
  layer {
    name: "9"
    parents: "8"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED encode5
  #################
  layer {
    name: "10"
    parents: "9"
    children: ""
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 100
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # RELU relu5
  #######
  layer {
    name: "11"
    parents: "10"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED decode5
  #################
  layer {
    name: "12"
    parents: "11"
    children: ""
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 250
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # RELU 6
  #######
  layer {
    name: "13"
    parents: "12"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED decode4
  #################
  layer {
    name: "14"
    parents: "13"
    children: ""
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 500
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }


  #######
  # RELU relu7
  #######
  layer {
    name: "15"
    parents: "14"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED decode3
  #################
  layer {
    name: "16"
    parents: "15"
    children: ""
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 1000
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # RELU relu8
  #######
  layer {
    name: "17"
    parents: "16"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED decode2
  #################
  layer {
    name: "18"
    parents: "17"
    children: ""
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 2000
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # RELU relu9
  #######
  layer {
    name: "19"
    parents: "18"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED decode1
  #################
  layer {
    name: "20"
    parents: "19"
    children: ""
    data_layout: "model_parallel"
    num_neurons_from_data_reader: true
    fully_connected {
      weight_initialization: "glorot_uniform"
      has_bias: true
    }
  }

  #######
  # RELU relu10
  #######
  layer {
    name: "21"
    parents: "20"
    children: ""
    data_layout: "model_parallel"
    relu {
    }
  }

  
  #################
  # RECONSTRUCTION
  #################
  layer {
    name: "22"
    parents: "21"
    children: ""
    data_layout: "model_parallel"
    reconstruction {
      original_layer: 1
    }
  }

  ###################################################
  # end of layers
  ###################################################
}
